GENERAL
-------

TODO: Start making unit tests!

CORE FEATURES/CHANGES
---------------------

TODO: Refactor index.php to use Bootstrap class using BootstrapInterface? Then you can inject ExceptionHandler to it? Or create an event system, see Symfony's event manager.
TODO: ExceptionHandler is still not flexible. Users cannot run custom callbacks or handle unhandled exception by themselves. Maybe use event manager?

NEW MODULES/CLASSES
-------------------

TODO: Carrot\Helper\Template, to be used by view classes. Make the dependency as loose as possible.
TODO: Carrot\Database\MySQLi, extend the original MySQLi class, add factory method to create the StatementWrapper.
TODO: Carrot\Session package, get hints from Symfony, add flash variable, different storage mechanism support, consider SessionStorageInterface.
TODO: Carrot\Helper\Config, for immutable configuration files.
TODO: Carrot\Helper\URL, with autodetection for base URL and stuff.
TODO: Carrot\Validation package, make it easier to use! Use lambda function for on the spot validation function, or callbacks. Take hints from Zend_Validation.

DOCUMENTATION
-------------

TODO: Fix comments on all classes, add @throws to denote exception thrown, and why it is thrown.
TODO: Fix comments on all classes, add @see to denote protected class caller.
TODO: Use the 'use' keyword for all classes.
TODO: Fix comments on all classes to use full namespaces, for every @param and @return, use full namespace for object type, so @param \MySQLi_STMT $stmt comments.
TODO: Fix comments on Database library (you changed namespaces, wait for it to stabilize).

NOTES
-----

